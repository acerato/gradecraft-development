= content_nav_for "Resubmissions"

%h3.pagetitle= @title

.pageContent
  = render "layouts/alerts"

  %span.label.alert= "You have #{@resubmission_count} resubmissions to grade"

  - if current_course.has_teams?
    .team-filter
      = form_tag resubmissions_path, name: "see_team", :onchange => ("javascript: document.see_team.submit();"), :method => :get do
        %label
          .sr-only Select #{term_for :team}
        = select_tag :team_id, options_for_select(@teams.map { |t| [t.name, t.id] }, @team.try(:id)), :prompt => "â€“ Select #{(term_for :team).titleize} â€“"

  - @resubmissions.group_by(&:assignment).each do |assignment, resubmissions|
    %h5.section-title
      = link_to assignment.name, assignment

    %table.dynatable{"aria-describedby" => "ungradedTableCaption"}
      %thead
        %tr
          - if assignment.is_individual?
            %th{scope: "col", :width => "7%"} First Name
            %th{scope: "col", :width => "7%"} Last Name
            - if current_course.has_teams?
              %th{scope: "col", :width => "15%"}= "#{term_for :team}"
          - elsif assignment.has_groups?
            %th{scope: "col"} Group
          %th{scope: "col", :width => "7%"} Current Score
          %th{scope: "col", :width => "7%"} Graded
          %th{scope: "col", :width => "7%"} Resubmitted
          %th{scope: "col", :style => "min-width: 300px" }
            %span.sr-only Actions
      %tbody
        - resubmissions.each do |re|
          %tr
            - if re.assignment.is_individual?
              %td= link_to re.student.first_name, student_path(re.student)
              %td= link_to re.student.last_name, student_path(re.student)
              - if current_course.has_teams?
                %td
                  - team = re.student.team_for_course(current_course)
                  - if team.present?
                    = link_to team.name, team
              %td= points re.student.grade_for_assignment(re.assignment).score
              %td= re.student.grade_for_assignment(re.assignment).graded_at
              %td= re.submitted_at
              %td
                .right
                  %ul.button-bar
                    %li= link_to glyph(:eye) + "See Submission", assignment_submission_path(re.assignment, id: re.id), class: "button"
                    %li= link_to glyph(:edit) + "Edit Grade", edit_assignment_grade_path(assignment_id:assignment.id, student_id: re.student.try(:id)), class: "button"
            - elsif re.assignment.has_groups?
              %td= link_to re.group.name, group_path(id: re.group.id)
              %td
              %td
              %td= re.submitted_at
              %td
                .right
                  %ul.button-bar
                    %li= link_to re.group.name, group_path(re.group)
                    %li= link_to glyph(:eye) + "See Submission", assignment_submission_path(re.assignment.id, id: re.id), class: "button"
              %td= link_to glyph(:check) + "Grade", grade_assignment_group_path(re.assignment, re.group), class: "button"

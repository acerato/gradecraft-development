.grade-container(ng-app="gradecraft")
  = csrf_meta_tag

  %section
    %hr.dotted
    = simple_form_for @grade, url: assignment_grade_path(@assignment), method: :patch do |f|
      = hidden_field_tag :student_id, current_student.id
      = f.hidden_field :submission_id, value: @submission.try(:id)

      #grade(ng-controller="GradeCtrl" ng-init="init(#{@serialized_init_data})")
        .panel.splash(ng-cloak) Loading grade for #{@student.name}...

        .panel(ng-cloak)
          - if @assignment.pass_fail?
            .switch-label
              = "#{term_for :pass} / #{term_for :fail} Status"
            .pass-fail-grade-toggle
              .switch.pass-fail-contingent{data: {:on => "#{term_for :pass}", :off => "#{term_for :fail}"}}
                = f.check_box :pass_fail_status, { :checked=> @grade.pass_fail_status == "Pass" }, checked_value = "Pass", unchecked_value = "Fail"
                - label_text = @grade.pass_fail_status ? (term_for @grade.pass_fail_status) : (term_for :fail)
                = f.label :pass_fail_status, label_text
          - else
            - if @assignment_score_levels.count > 0 # use this longhand method to save a request
              = render partial: "grades/standard_edit/score_level_grading_fields", locals: {f:f}
            - else
              = render partial: "grades/standard_edit/raw_score_grading_fields", locals: {f:f}

          .attachments(ng-cloak)
            .clear
            = render partial: "grades/standard_edit/standard_edit_attachment", locals: {f: f}

          .text-feedback
            = f.hidden_field :graded_by_id, :value => current_user.id
            = f.label :feedback
            = f.text_area :feedback,
              "froala" => "froalaOptions",
              "ng-change" => "grade.update()",
              "ng-model" => "grade.feedback",
              "ng-model-options" => "{ debounce: 1000 }"

          %span.last-updated
            #updated-at(ng-hide="grade.updated_at")= "Last updated #{time_ago_in_words(@grade.updated_at)} ago"
            #updated-at-current(ng-show="grade.updated_at" ng-class="{just_updated: grade.justUpdated()}")
              %span updated
              %span(am-time-ago="grade.updated_at")

          .clear
          %br
          .right
            .row
              .assignment-status
                - if @assignment.release_necessary?

                  = f.input :status, as: :select, :collection => Grade::STATUSES, :selected => @grade.status, :include_blank => false
                - else
                  = f.input :status, as: :select, :collection => Grade::UNRELEASED_STATUSES, :selected => @grade.status || "Graded", :include_blank => false
                .align-right.form_label Can the student see this grade?
          .clear
          %br


          .submit-buttons
            %ul
              %li= submit_tag "#{@grade.persisted? && @grade.is_graded? ? 'Update' : 'Submit'} Grade", class: "button"
              %li= link_to glyph("times-circle") + "Cancel", assignment_path(@assignment), class: "button"

        %section

        - if current_course.badges.present?
          %section
            #awarded(ng-cloak)
              = render partial: "grades/standard_edit/badges_awarded"
              .clear

            #available.empty(ng-cloak)
              = render partial: "grades/standard_edit/badges_available"
              .clear

          .panel(ng-if="debug" ng-cloak)
            .badge-debug(ng-repeat="badge in badges" ng-class="{creating: badge.creating, deleting: badge.deleting}")
              .info
                %h4 {{badge.name}}
              .info
                %b Creating:
                {{badge.creating}}
              .info
                %b Deleting:
                {{badge.deleting}}
              .info.earned-badge
                %b EarnedBadge:
                .pretty-json {{badge.earnedBadge | json}}
